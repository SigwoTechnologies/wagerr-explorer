version: '3'
networks: 
  dbnet:
    driver: bridge

services:
  redis:
    image: redis
    hostname: ${REDIS_HOST}
    networks:
      - dbnet
    ports:
        - "6376:6379"
    restart: always

  mongo:
    image: mongo:latest
    env_file: .env
    restart: always
    networks:
      - dbnet
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:27017"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
      - ./data/db:/data/db
    ports:
      - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null # --quiet

  explorer:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - mongo
      - redis
    links:
      - mongo
      - redis:${REDIS_HOST}
    networks:
      - dbnet
    ports:
      - "8087:8087"
      - "8081:8081"
      - "55005:55005"
      - "8332:8332"
    restart: on-failure
    command: script/start.sh
    volumes:
      - ./:/explorer
